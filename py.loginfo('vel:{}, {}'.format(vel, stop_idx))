Binary file src/tl_detector/light_classification/models/frozen_inference_graph.pb matches
src/tl_detector/tl_detector.py[36m:[m        rospy.Subscriber('/current_pose', PoseStamped, self.pose_[1;31mcb[m)
src/tl_detector/tl_detector.py[36m:[m        sub = rospy.Subscriber('/base_waypoints', Lane, self.waypoints_[1;31mcb[m)
src/tl_detector/tl_detector.py[36m:[m        rospy.Subscriber('/vehicle/traffic_lights', TrafficLightArray, self.traffic_[1;31mcb[m)
src/tl_detector/tl_detector.py[36m:[m        rospy.Subscriber('/image_color', Image, self.image_[1;31mcb[m)
src/tl_detector/tl_detector.py[36m:[m    def pose_[1;31mcb[m(self, msg):
src/tl_detector/tl_detector.py[36m:[m    def waypoints_[1;31mcb[m(self, waypoints):
src/tl_detector/tl_detector.py[36m:[m    def traffic_[1;31mcb[m(self, msg):
src/tl_detector/tl_detector.py[36m:[m    def image_[1;31mcb[m(self, msg):
src/twist_controller/dbw_node.py[36m:[m        rospy.Subscriber('/vehicle/dbw_enabled', Bool, self.dbw_enabled_[1;31mcb[m)
src/twist_controller/dbw_node.py[36m:[m        rospy.Subscriber('/twist_cmd', TwistStamped, self.twist_[1;31mcb[m)
src/twist_controller/dbw_node.py[36m:[m        rospy.Subscriber('/current_velocity', TwistStamped, self.velocity_[1;31mcb[m)
src/twist_controller/dbw_node.py[36m:[m    def dbw_enabled_[1;31mcb[m(self, msg):
src/twist_controller/dbw_node.py[36m:[m    def twist_[1;31mcb[m(self, msg):
src/twist_controller/dbw_node.py[36m:[m    def velocity_[1;31mcb[m(self, msg):
src/twist_controller/dbw_test.py[36m:[m        rospy.Subscriber('/vehicle/steering_cmd', SteeringCmd, self.steer_[1;31mcb[m)
src/twist_controller/dbw_test.py[36m:[m        rospy.Subscriber('/vehicle/throttle_cmd', ThrottleCmd, self.throttle_[1;31mcb[m)
src/twist_controller/dbw_test.py[36m:[m        rospy.Subscriber('/vehicle/brake_cmd', BrakeCmd, self.brake_[1;31mcb[m)
src/twist_controller/dbw_test.py[36m:[m        rospy.Subscriber('/actual/steering_cmd', SteeringCmd, self.actual_steer_[1;31mcb[m)
src/twist_controller/dbw_test.py[36m:[m        rospy.Subscriber('/actual/throttle_cmd', ThrottleCmd, self.actual_throttle_[1;31mcb[m)
src/twist_controller/dbw_test.py[36m:[m        rospy.Subscriber('/actual/brake_cmd', BrakeCmd, self.actual_brake_[1;31mcb[m)
src/twist_controller/dbw_test.py[36m:[m        rospy.Subscriber('/vehicle/dbw_enabled', Bool, self.dbw_enabled_[1;31mcb[m)
src/twist_controller/dbw_test.py[36m:[m    def dbw_enabled_[1;31mcb[m(self, msg):
src/twist_controller/dbw_test.py[36m:[m    def steer_[1;31mcb[m(self, msg):
src/twist_controller/dbw_test.py[36m:[m    def throttle_[1;31mcb[m(self, msg):
src/twist_controller/dbw_test.py[36m:[m    def brake_[1;31mcb[m(self, msg):
src/twist_controller/dbw_test.py[36m:[m    def actual_steer_[1;31mcb[m(self, msg):
src/twist_controller/dbw_test.py[36m:[m    def actual_throttle_[1;31mcb[m(self, msg):
src/twist_controller/dbw_test.py[36m:[m    def actual_brake_[1;31mcb[m(self, msg):
src/waypoint_updater/waypoint_updater.py[36m:[m        rospy.Subscriber('/current_pose', PoseStamped, self.pose_[1;31mcb[m)
src/waypoint_updater/waypoint_updater.py[36m:[m        rospy.Subscriber('/base_waypoints', Lane, self.waypoints_[1;31mcb[m)
src/waypoint_updater/waypoint_updater.py[36m:[m        rospy.Subscriber('/traffic_waypoint', Int32, self.traffic_[1;31mcb[m)
src/waypoint_updater/waypoint_updater.py[36m:[m        rospy.Subscriber('/vehicle/traffic_lights', TrafficLightArray, self.trafficlights_[1;31mcb[m)
src/waypoint_updater/waypoint_updater.py[36m:[m    def pose_[1;31mcb[m(self, msg):
src/waypoint_updater/waypoint_updater.py[36m:[m    def waypoints_[1;31mcb[m(self, waypoints):
src/waypoint_updater/waypoint_updater.py[36m:[m    def traffic_[1;31mcb[m(self, msg):
src/waypoint_updater/waypoint_updater.py[36m:[m    def trafficlights_[1;31mcb[m(self, msg):
src/waypoint_updater/waypoint_updater.py[36m:[m        #rospy.loginfo('test traffic_lights_[1;31mcb[m: {} '.format(msg.lights))
src/waypoint_updater/waypoint_updater.py[36m:[m    def obstacle_[1;31mcb[m(self, msg):
